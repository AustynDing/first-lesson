void swap1(int x,int y)
{
    int c=0;
    c=x;
    x=y;
    y=c;
}
void swap2(int*x,int*y)
{
    int c;
    c=*x;
    *x=*y;
    *y=c;
}
int main()
{  int a; 
    int b;
    scanf_s("%d%d",&a,&b);
    printf("a=%d b=%d\n",a,b);
    //swap1(a,b);
    swap2(&a,&b);
    printf("a=%d b=%d\n",a,b);
    return 0;
}
重点：1.swap1是失败的原因在于a b所在的地址和x y所在的地址不同，即赋值x y后，ab便与xy是独立的了【形参和实参有不同的内存块】
      2.swap2则利用了&传递了ab的地址，利用*（解引用操作符）使内存里的ab进行了交换【传址调用】
      3.形参实际上是实参的一份临时拷贝，对于形参的修改不会改变实参【传值调用】
